#!/usr/bin/env bash
#
# Main Script
#
# shellcheck disable=SC2039

# --------------
# Setup
# --------------

set -euo pipefail
IFS=$'\n\t'

. "scripts/globals.sh"

# --------------
# Functions
# --------------

main() {
  if [ "$(id -u)" == "0" ]; then
    echo "FAILURE: This script must not be run as root"
    exit 1
  fi

  COMMAND_TYPE=${1:-}

  git submodule update --init

  echo "Bash version: $BASH_VERSION"

  install_homebrew
  install_mackup

  local install_paths=(
    "ruby"
  )

  for install_path in "${install_paths[@]}"; do
    echo ''
    echo "Running ${install_path}/install.sh"
    sh "${install_path}/install.sh" "$1"
  done

  # find the installers and run them iteratively
  while read -r -d '' installer; do
    local already_installed=""
    for install_path in "${install_paths[@]}"; do
      if [[ $installer == *"$install_path"* ]]; then
        already_installed="$install_path"
        break
      fi
    done

    if [[ -n $already_installed ]]; then
      continue
    fi

    echo ''
    echo "Running ${installer}"
    sh "${installer}" "$1"
  done < <(find . -name "*install.sh" -print0)
}

# --------------
# Installs
# --------------

install_homebrew() {
  echo 'Setting up Homebrew'

  sudo chown -R "$(whoami)" /usr/local/lib /usr/local/sbin

  if ! [ -x "$(command -v brew)" ]; then
    echo 'Installing Homebrew'
    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  fi

  case "$COMMAND_TYPE" in
  "update")
    brew upgrade
    brew bundle
    ;;
  *) brew bundle check || brew bundle ;;
  esac
}

install_mackup() {
  rm ~/.mackup.cfg
  ln -s ~/.dotfiles/private/mackup/.mackup.cfg ~/.mackup.cfg
}

# --------------
# Main Script
# --------------

main "$@"
